import PersonIcon from '@mui/icons-material/Person';
import PersonOutlineIcon from '@mui/icons-material/PersonOutline';
import RocketLaunchIcon from '@mui/icons-material/RocketLaunch';
import RocketLaunchOutlinedIcon from '@mui/icons-material/RocketLaunchOutlined';
import AddIcon from '@mui/icons-material/Add';
import ForumIcon from '@mui/icons-material/Forum';
import ForumOutlinedIcon from '@mui/icons-material/ForumOutlined';
import SettingsIcon from '@mui/icons-material/Settings';
import SettingsOutlinedIcon from '@mui/icons-material/SettingsOutlined';
import ListIcon from '@mui/icons-material/List';
import AnalyticsIcon from '@mui/icons-material/Analytics';

import asyncComponentLoader from '@/utils/loader';

import { Pages, Routes, AppRoutes } from './types';

export const useAppRoutes = (): Partial<AppRoutes> => {
  return {
    [Pages.User]: {
      component: asyncComponentLoader(() => import('@/pages/User')),
      path: '/user',
      title: 'Profile',
      icon: PersonIcon,
      iconOutlined: PersonOutlineIcon,
      requiresAuth: true,
      visibleTo: ['startup', 'coach'],
      requiresStartup: false,
      order: 1,
      agent: 'entrepreneur',
    },
    [Pages.Startup]: {
      component: asyncComponentLoader(() => import('@/pages/Startup')),
      path: '/startup',
      title: 'Startup',
      icon: RocketLaunchIcon,
      iconOutlined: RocketLaunchOutlinedIcon,
      requiresAuth: true,
      visibleTo: ['startup'],
      requiresStartup: true,
      order: 2,
      agent: 'team',
    },
    [Pages.Capture]: {
      component: asyncComponentLoader(() => import('@/pages/Capture')),
      path: '/capture',
      title: 'Capture',
      icon: AddIcon,
      iconOutlined: AddIcon,
      requiresAuth: true,
      visibleTo: ['startup', 'coach'],
      requiresStartup: false,
      order: 3,
    },
    [Pages.Coach]: {
      component: asyncComponentLoader(() => import('@/pages/Coach')),
      path: '/coach',
      title: 'Coach',
      icon: ForumIcon,
      iconOutlined: ForumOutlinedIcon,
      requiresAuth: true,
      visibleTo: ['startup'],
      requiresStartup: true,
      order: 4,
    },
    [Pages.Settings]: {
      component: asyncComponentLoader(() => import('@/pages/Settings')),
      path: '/settings',
      title: 'Settings',
      icon: SettingsIcon,
      iconOutlined: SettingsOutlinedIcon,
      requiresAuth: true,
      visibleTo: ['startup', 'coach'],
      requiresStartup: false,
      order: 5,
    },
    [Pages.Startups]: {
      component: asyncComponentLoader(() => import('@/pages/Startups/Overview')),
      path: '/startups',
      title: 'Startups',
      icon: ListIcon,
      requiresAuth: true,
      visibleTo: ['coach'],
      requiresStartup: false,
    },
    [Pages.Analytics]: {
      component: asyncComponentLoader(() => import('@/pages/Startups/Analytics')),
      path: '/analytics',
      title: 'Analytics',
      icon: AnalyticsIcon,
      requiresAuth: true,
      visibleTo: ['coach'],
      requiresStartup: false,
    },
    [Pages.NotFound]: {
      component: asyncComponentLoader(() => import('@/pages/NotFound')),
      path: '*',
      requiresAuth: false,
      visibleTo: ['startup', 'coach'],
      requiresStartup: false,
    },
  };
};

const useRoutes = (): Partial<Routes> => {
  return {
    ...useAppRoutes(),
    [Pages.Dashboard]: {
      component: asyncComponentLoader(() => import('@/pages/Dashboard')),
      path: '/dashboard',
      title: 'Dashboard',
      requiresAuth: true,
      visibleTo: ['startup'],
      requiresStartup: true,
    },
    [Pages.Progress]: {
      component: asyncComponentLoader(() => import('@/pages/Progress')),
      path: '/progress',
      title: 'Progress',
      requiresAuth: true,
      visibleTo: ['startup'],
      requiresStartup: true,
    },
    [Pages.Profile]: {
      component: asyncComponentLoader(() => import('@/pages/Profile')),
      path: '/profile',
      title: 'Profile',
      requiresAuth: true,
      visibleTo: ['startup', 'coach'],
      requiresStartup: false,
      agent: 'entrepreneur',
    },
    [Pages.Welcome]: {
      component: asyncComponentLoader(() => import('@/pages/Welcome')),
      path: '/',
      title: 'Welcome',
      visibleTo: ['startup', 'coach'],
      requiresAuth: false,
      requiresStartup: false,
    },
    [Pages.Register]: {
      component: asyncComponentLoader(() => import('@/pages/Register')),
      path: '/signup',
      title: 'Sign Up',
      visibleTo: ['startup', 'coach'],
      requiresAuth: false,
      requiresStartup: false,
    },
    [Pages.ResetPassword]: {
      component: asyncComponentLoader(() => import('@/pages/ResetPassword')),
      path: '/reset-password',
      title: 'Reset Password',
      visibleTo: ['startup', 'coach'],
      requiresAuth: false,
      requiresStartup: false,
    },
    [Pages.CreateStartup]: {
      component: asyncComponentLoader(() => import('@/pages/Register/CreateStartup')),
      path: '/create-startup',
      title: 'Create Startup',
      visibleTo: ['startup'],
      requiresAuth: true,
      requiresStartup: false,
    },
    [Pages.NoStartup]: {
      component: asyncComponentLoader(() => import('@/pages/Register/NoStartup')),
      path: '/no-startup',
      title: 'No Startup associated with your account',
      visibleTo: ['startup'],
      requiresAuth: false,
      requiresStartup: false,
    },
    [Pages.Login]: {
      component: asyncComponentLoader(() => import('@/pages/Login')),
      path: '/login',
      title: 'Login',
      visibleTo: ['startup', 'coach'],
      requiresAuth: false,
      requiresStartup: false,
    },
    [Pages.Logout]: {
      component: asyncComponentLoader(() => import('@/pages/Logout')),
      path: '/logout',
      title: 'Logout',
      visibleTo: ['startup', 'coach'],
      requiresAuth: true,
      requiresStartup: false,
    },
    [Pages.UserProfile]: {
      component: asyncComponentLoader(() => import('@/pages/Profile/UserProfile')),
      path: '/profile/user',
      title: 'User Profile',
      visibleTo: ['startup', 'coach'],
      requiresAuth: true,
      requiresStartup: false,
      agent: 'entrepreneur',
    },
    [Pages.UpdateProfile]: {
      component: asyncComponentLoader(() => import('@/pages/Profile/UpdateProfile')),
      path: '/profile/edit/:field?',
      title: 'Update Profile',
      visibleTo: ['startup', 'coach'],
      requiresAuth: true,
      requiresStartup: false,
      agent: 'entrepreneur',
    },
    [Pages.StartupProfile]: {
      component: asyncComponentLoader(() => import('@/pages/Profile/StartupProfile')),
      path: '/profile/startup/:id',
      title: 'Startup Profile',
      visibleTo: ['startup'],
      requiresAuth: true,
      requiresStartup: true,
      agent: 'team',
    },
    [Pages.StartupProfileStep]: {
      component: asyncComponentLoader(() => import('@/pages/Profile/StartupProfileStep')),
      path: '/profile/startup/:startupId/:stepId',
      title: 'Startup Profile Step',
      visibleTo: ['startup'],
      requiresAuth: true,
      requiresStartup: true,
      agent: 'team',
    },
    [Pages.StartupEdit]: {
      component: asyncComponentLoader(() => import('@/pages/Profile/StartupEdit')),
      path: '/profile/startup/:id/edit',
      title: 'Edit Startup',
      visibleTo: ['startup'],
      requiresAuth: true,
      requiresStartup: true,
      agent: 'team',
    },
    [Pages.StartupTeam]: {
      component: asyncComponentLoader(() => import('@/pages/Profile/StartupTeam')),
      path: '/profile/startup/:startupId/team',
      title: 'Manage Team',
      visibleTo: ['startup'],
      requiresAuth: true,
      requiresStartup: true,
      agent: 'team',
    },
    [Pages.AcceptInvitation]: {
      component: asyncComponentLoader(() => import('@/pages/AcceptInvitation')),
      path: '/accept-invitation',
      title: 'Accept Invitation',
      visibleTo: ['startup'],
      requiresAuth: true,
      requiresStartup: false,
    },
    [Pages.ExplorePattern]: {
      component: asyncComponentLoader(() => import('@/pages/Explore/ExplorePattern')),
      path: '/explore/:id',
      title: 'Explore Pattern',
      visibleTo: ['startup'],
      requiresAuth: true,
      requiresStartup: true,
    },
    [Pages.ProgressPattern]: {
      component: asyncComponentLoader(() => import('@/pages/Progress/ProgressPattern')),
      path: '/progress/:id',
      title: 'Progress Pattern',
      visibleTo: ['startup'],
      requiresAuth: true,
      requiresStartup: true,
    },
    [Pages.Method]: {
      component: asyncComponentLoader(() => import('@/pages/Progress/Methods')),
      path: '/progress/:patternId/methods',
      title: 'Methods',
      visibleTo: ['startup'],
      requiresAuth: true,
      requiresStartup: true,
    },
    [Pages.Survey]: {
      component: asyncComponentLoader(() => import('@/pages/Progress/Survey')),
      path: '/progress/:patternId/survey',
      title: 'Survey',
      visibleTo: ['startup'],
      requiresAuth: true,
      requiresStartup: true,
    },
    [Pages.SelfAssessment]: {
      component: asyncComponentLoader(() => import('@/pages/SelfAssessment')),
      path: '/self-assessment',
      title: 'Self Assessment',
      visibleTo: ['startup'],
      requiresAuth: true,
      requiresStartup: true,
      agent: 'entrepreneur',
    },
    [Pages.CoachStartup]: {
      component: asyncComponentLoader(() => import('@/pages/Startups/Startup')),
      path: '/startups/:id',
      title: 'Startup',
      requiresAuth: true,
      visibleTo: ['coach'],
      requiresStartup: false,
    },
    [Pages.TeamContract]: {
      component: asyncComponentLoader(() => import('@/pages/Tools/TeamContract')),
      path: '/tools/team-contract',
      title: 'Team Contract',
      visibleTo: ['startup'],
      requiresAuth: true,
      requiresStartup: true,
      agent: 'team',
    },
    [Pages.TeamValues]: {
      component: asyncComponentLoader(() => import('@/pages/Tools/TeamValues')),
      path: '/tools/team-values',
      title: 'Team Values',
      visibleTo: ['startup'],
      requiresAuth: true,
      requiresStartup: true,
      agent: 'team',
    },
    [Pages.InterviewAnalyzer]: {
      component: asyncComponentLoader(() => import('@/pages/Tools/InterviewAnalyzer')),
      path: '/tools/interview-analyzer',
      title: 'Interview Analyzer',
      visibleTo: ['startup'],
      requiresAuth: true,
      requiresStartup: true,
      agent: 'stakeholders',
    },
    [Pages.PitchDeckAnalyzer]: {
      component: asyncComponentLoader(() => import('@/pages/Tools/PitchDeckAnalyzer')),
      path: '/tools/pitch-deck-analyzer',
      title: 'Pitch Deck Analyzer',
      visibleTo: ['startup'],
      requiresAuth: true,
      requiresStartup: true,
      agent: 'product',
    },
    [Pages.FinancialPlan]: {
      component: asyncComponentLoader(() => import('@/pages/Tools/FinancialPlan')),
      path: '/tools/financial-plan',
      title: 'Financial Plan',
      visibleTo: ['startup'],
      requiresAuth: true,
      requiresStartup: true,
      agent: 'sustainability',
    },
    [Pages.Explore]: {
      component: asyncComponentLoader(() => import('@/pages/Explore')),
      path: '/explore',
      title: 'Explore',
      visibleTo: ['startup'],
      requiresAuth: true,
      requiresStartup: true,
    },
  };
};

export default useRoutes;
